{"version":3,"sources":["effect/recognition.ts","effect/timer.tsx","env/index.ts","room.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["RecognitionEffect","recognition","window","webkitSpeechRecognition","running","onFinal","onProgress","onError","this","continuous","interimResults","onresult","event","i","resultIndex","results","length","isFinal","transcript","onerror","console","warn","start","stop","Timer","expiryTimestamp","useTimer","onExpire","alert","seconds","minutes","isRunning","restart","style","textAlign","fontSize","onClick","time","Date","setSeconds","getSeconds","useStyles","makeStyles","button","backgroundColor","width","textarea","resize","height","icons","verticalalign","imageicons","position","Box","reaction","Room","roomId","peer","React","useRef","Peer","key","useState","remoteVideo","setRemoteVideo","localStream","setLocalStream","Message","setMessage","Avater","setAvater","room","setRoom","localVideoRef","ScreenShareRef","isStarted","setIsStarted","open","setopen","open2","setopen2","classes","startScreenShareTrigger","document","getElementById","useEffect","navigator","mediaDevices","getUserMedia","video","audio","then","stream","current","srcObject","play","catch","e","log","onStart","a","tmpRoom","joinRoom","mode","once","prev","peerId","id","image","on","addEventListener","send","src","data","text","value","filter","getTracks","forEach","track","str","vmsg","ScreenShare","ScreenStream","ScreenShareId","ScreenShareRoom","undefined","pointscreen","offsetX","offsetY","left","top","screenShareRoomInstance","StartScreenShare","getDisplayMedia","screaenStream","close","toggleOpen","toggleOpen2","index","map","avater","ref","playsInline","Drawer","variant","ModalProps","keepMounted","anchor","onClose","Button","className","disabled","readOnly","TextField","name","onChange","target","changetext","onKeyDown","sendmessage","RemoteVideo","props","videoRef","Avatereffect","alt","Avaterimage","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.ec064eb6.chunk.js","sourcesContent":["export class RecognitionEffect {\n  recognition = new (window as any).webkitSpeechRecognition();\n  running = false;\n\n  onFinal?: (str: string) => void;\n  onProgress?: (str: string) => void;\n  onError?: () => void;\n\n  constructor() {\n    this.recognition.continuous = true;\n    this.recognition.interimResults = true;\n\n    this.recognition.onresult = (event: {\n      resultIndex: any;\n      results: string | any[];\n    }) => {\n      for (let i = event.resultIndex; i < event.results.length; ++i) {\n        if (event.results[i].isFinal) {\n          if (this.onFinal) this.onFinal(event.results[i][0].transcript);\n        } else {\n          // eslint-disable-next-line no-lonely-if\n          if (this.onProgress) this.onProgress(event.results[i][0].transcript);\n        }\n      }\n    };\n\n    this.recognition.onerror = (event: any) => {\n      console.warn(event);\n      if (this.onError) this.onError();\n    };\n\n    this.start();\n  }\n\n  start() {\n    this.running = true;\n    this.recognition.start();\n  }\n\n  stop() {\n    this.running = false;\n    this.recognition.stop();\n  }\n\n  toggle() {\n    if (this.running) {\n      this.stop();\n    } else {\n      this.start();\n    }\n  }\n}\n","import React from \"react\";\r\nimport { useTimer } from \"react-timer-hook\";\r\n\r\nexport function Timer({ expiryTimestamp }: { expiryTimestamp: Date }) {\r\n  const {\r\n    seconds,\r\n    minutes,\r\n    isRunning,\r\n    start,\r\n    restart,\r\n  } = useTimer({\r\n    expiryTimestamp,\r\n    onExpire: () => alert(\"testcode\"),\r\n  });\r\n\r\n  return (\r\n    <div style={{ textAlign: \"center\" }}>\r\n      <div style={{ fontSize: \"100px\" }}>\r\n        <span>{minutes}</span>:<span>{seconds}</span>\r\n      </div>\r\n      <p>{isRunning ? \"Running\" : \"Not running\"}</p>\r\n      <button onClick={start}>Start</button>\r\n      <button\r\n        onClick={() => {\r\n          // Restarts to 5 minutes timer\r\n          const time = new Date();\r\n          time.setSeconds(time.getSeconds() + 900);\r\n          restart(time as unknown as Date);\r\n        }}\r\n      >\r\n        Restart\r\n      </button>\r\n    </div>\r\n  );\r\n};","export const SKYWAY_API_KEY = \"00403e5e-fdf0-4ad6-bdf9-88c71127156f\";\r\n","import Peer,{ SfuRoom } from \"skyway-js\";\r\nimport React from \"react\";\r\nimport { Box, makeStyles, TextField } from \"@material-ui/core\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport { RecognitionEffect } from './effect/recognition';\r\nimport { Timer } from './effect/timer'\r\nimport { SKYWAY_API_KEY } from \"./env\";\r\n\r\ntype VideoStream={\r\n  stream: MediaStream;\r\n  peerId: string;\r\n};\r\ntype Avater={\r\n  peerId: string;\r\n  image?: string;\r\n};\r\n\r\n\r\nconst useStyles = makeStyles({\r\n  button:{\r\n    backgroundColor: 'green',\r\n    width: 320,\r\n  },\r\n  textarea:{\r\n    resize: \"none\",\r\n    width: 315,\r\n    height: 200,\r\n  },\r\n  icons:{\r\n    width: 50,\r\n    height: 50,\r\n    verticalalign: \"middle\",\r\n  },\r\n  imageicons:{\r\n    width: 50,\r\n    height: 50,\r\n    verticalalign: \"middle\",\r\n    position: \"absolute\",\r\n  },\r\n  Box:{\r\n    width: 315,\r\n    height: 200,\r\n  },\r\n  reaction:{\r\n    width: 50,\r\n    height: 50,\r\n  }\r\n});\r\n\r\nexport const Room: React.VFC<{ roomId: string }> = ({ roomId }) => {\r\n    const peer = React.useRef(new Peer({ key: SKYWAY_API_KEY as string }));\r\n    const [remoteVideo, setRemoteVideo] = React.useState<VideoStream[]>([]);\r\n    const [localStream, setLocalStream] = React.useState<MediaStream>();\r\n    const [Message, setMessage] = React.useState(\"\");\r\n\r\n    const [Avater, setAvater] = React.useState<Avater[]>([]);\r\n\r\n    const [room, setRoom] = React.useState<SfuRoom>();\r\n    const localVideoRef = React.useRef<HTMLVideoElement>(null);\r\n    const ScreenShareRef = React.useRef<HTMLVideoElement>(null);\r\n    const [isStarted, setIsStarted] = React.useState(false);\r\n    const [open, setopen] = React.useState(false);\r\n    const [open2, setopen2] = React.useState(false);\r\n\r\n\r\n    const classes = useStyles();\r\n\r\n    const startScreenShareTrigger = document.getElementById('js-startScreenShare-trigger');\r\n\r\n    React.useEffect(() => {\r\n      navigator.mediaDevices\r\n        .getUserMedia({ video: {width:320,height:240}, audio: true })\r\n        .then((stream) => {\r\n          setLocalStream(stream);\r\n          if (localVideoRef.current) {\r\n            localVideoRef.current.srcObject = stream;\r\n            localVideoRef.current.play().catch((e) => console.log(e));\r\n          }\r\n        })\r\n        .catch((e) => {\r\n          console.log(e);\r\n        });\r\n    }, []);\r\n    const onStart = async () => {\r\n      if (peer.current) {\r\n        if (!peer.current.open) {\r\n          return;\r\n        }\r\n        const tmpRoom = peer.current.joinRoom<SfuRoom>(roomId, {\r\n          mode: \"sfu\",\r\n          stream: localStream,\r\n        });\r\n        tmpRoom.once(\"open\", () => {\r\n          console.log(\"=== You joined ===\\n\");\r\n          setAvater((prev) => [\r\n            ...prev,\r\n            { peerId: peer.current.id, image: \"https://iconbu.com/wp-content/uploads/2021/03/%E3%81%9F%E3%81%AC%E3%81%8D%E3%81%95%E3%82%93%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3.jpg\"},\r\n          ]);\r\n        });\r\n        tmpRoom.on(\"peerJoin\", (peerId) => {\r\n          console.log(`=== ${peerId} joined ===\\n`);\r\n        });\r\n        tmpRoom.on(\"stream\", async (stream) => {\r\n          setRemoteVideo((prev) => [\r\n            ...prev,\r\n            { stream: stream, peerId: stream.peerId },\r\n          ]);\r\n          setAvater((prev) => [\r\n            ...prev,\r\n            { peerId: stream.peerId, image: \"https://iconbu.com/wp-content/uploads/2021/03/%E3%81%9F%E3%81%AC%E3%81%8D%E3%81%95%E3%82%93%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3.jpg\"},\r\n          ]);\r\n        });\r\n\r\n        window.addEventListener(\"focus\", () => {\r\n          console.log(\"ページにフォーカスされた\");\r\n          tmpRoom.send(\"ページにフォーカスされた\");\r\n        });\r\n        window.addEventListener(\"blur\", () => {\r\n          console.log(\"ページからフォーカスが外れた\");\r\n          tmpRoom.send(\"ページからフォーカスが外れた\");\r\n        });\r\n\r\n        tmpRoom.on(\"data\", ({src, data}) =>{\r\n          console.log(`${src}: ${data}\\n`);\r\n          const text = `${src}:${data}\\n`;\r\n          const add_text = document.getElementById('t_chat') as HTMLInputElement;\r\n          add_text.value += text;\r\n        });\r\n        tmpRoom.on(\"peerLeave\", (peerId) => {\r\n          setRemoteVideo((prev) => {\r\n            return prev.filter((video) => {\r\n              if (video.peerId === peerId) {\r\n                video.stream.getTracks().forEach((track) => track.stop());\r\n              }\r\n              return video.peerId !== peerId;\r\n            });\r\n          });\r\n          console.log(`=== ${peerId} left ===\\n`);\r\n        });\r\n\r\n        const recognition = new RecognitionEffect();\r\n        recognition.onFinal = (str) => {\r\n          let vmsg = str;\r\n          tmpRoom.send(vmsg);\r\n          console.log(vmsg);\r\n          const text = `${peer.current.id}:${vmsg}\\n`;\r\n          const add_text = document.getElementById('t_chat') as HTMLInputElement;\r\n          add_text.value += text;\r\n        };\r\n\r\n        setRoom(tmpRoom);\r\n\r\n        const ScreenShare = (ScreenStream: MediaStream | undefined) =>{\r\n          const ScreenShareId = roomId + '_screen';\r\n          let ScreenShareRoom: SfuRoom | null = null;\r\n    \r\n          if(ScreenStream === undefined) {\r\n            ScreenShareRoom = peer.current.joinRoom<SfuRoom>(ScreenShareId, {\r\n              mode: 'sfu',\r\n            }); \r\n          }else{\r\n            console.log(\"check\");\r\n            ScreenShareRoom = peer.current.joinRoom<SfuRoom>(ScreenShareId, {\r\n              mode: 'sfu',\r\n              stream: ScreenStream\r\n            }); \r\n          }\r\n          \r\n          ScreenShareRoom.once('open', () => {\r\n            console.log(\"=== You Screen joined ===\\n\");\r\n          });\r\n          ScreenShareRoom.on('peerJoin', peerId => {\r\n            console.log(`=== ${peerId} joined ===\\n`);\r\n          });\r\n    \r\n          ScreenShareRoom.on('stream', async (stream) => {\r\n            console.log(\"catch\");\r\n            if (ScreenShareRef.current) {\r\n              ScreenShareRef.current.srcObject = stream;\r\n              ScreenShareRef.current.play().catch((e) => console.log(e));\r\n            }\r\n          });\r\n\r\n          let pointscreen = document.getElementById('js-remote-screen-streams');\r\n\r\n          if (pointscreen != null) {\r\n            pointscreen.addEventListener('click', function (e) {\r\n              let offsetX = e.offsetX;\r\n              let offsetY = e.offsetY;\r\n              console.log(offsetX, offsetY);\r\n              ScreenShareRoom?.send({offsetX, offsetY});\r\n              let id = document.getElementById(peer.current.id)!;\r\n              console.log(id);\r\n              id.style.left = offsetX + 'px';\r\n              id.style.top = offsetY + 'px';\r\n            });\r\n          }\r\n\r\n          ScreenShareRoom.on(\"data\", ({src, data}) =>{\r\n            let id = document.getElementById(src)!;\r\n            id.style.left = data.offsetX + 'px';\r\n            id.style.top = data.offsetY + 'px';\r\n            console.log(`${src}: ${data.offsetX} ${data.offsetY}\\n`);\r\n          });\r\n    \r\n          ScreenShareRoom.on('peerLeave', peerId => {\r\n            console.log(`=== ${peerId} left ===\\n`);\r\n          });\r\n    \r\n          ScreenShareRoom.once('close', () => {\r\n    \r\n          });\r\n          return ScreenShareRoom;\r\n        };\r\n\r\n        let screenShareRoomInstance = ScreenShare(undefined);\r\n        \r\n        const StartScreenShare = async () =>{\r\n          let screaenStream;\r\n          await navigator.mediaDevices\r\n          .getDisplayMedia({ video:{width:1600,height:1280}})\r\n          .then((stream) => {\r\n            screaenStream = stream;\r\n            if (ScreenShareRef.current) {\r\n              ScreenShareRef.current.srcObject = stream;\r\n              ScreenShareRef.current.play().catch((e) => console.log(e));\r\n            }\r\n          })\r\n          .catch((e) => {\r\n            console.log(e);\r\n          });\r\n          screenShareRoomInstance.close();\r\n          screenShareRoomInstance = ScreenShare(screaenStream);\r\n        };\r\n\r\n        startScreenShareTrigger?.addEventListener('click', StartScreenShare,{ once: true });\r\n      }\r\n      setIsStarted((prev) => !prev);\r\n    };\r\n\r\n    const onEnd = () => {\r\n      if (room) {\r\n        room.close();\r\n        setRemoteVideo((prev) => {\r\n          return prev.filter((video) => {\r\n            video.stream.getTracks().forEach((track) => track.stop());\r\n            return false;\r\n          });\r\n        });\r\n      }\r\n      console.log(\"=== You left ===\\n\");\r\n      setIsStarted((prev) => !prev);\r\n    };\r\n    const castVideo = () => {\r\n      return remoteVideo.map((video) => {\r\n        return <RemoteVideo video={video} key={video.peerId} />;\r\n      });\r\n    };\r\n    const castAvater = () => {\r\n      return Avater.map((avater, index) => {\r\n        index === 1 ? avater.image=\"https://iconbu.com/wp-content/uploads/2020/08/%E3%83%95%E3%83%88%E3%82%A2%E3%82%B4%E3%81%95%E3%82%93.jpg\" :\r\n        index === 2 ? avater.image=\"https://iconbu.com/wp-content/uploads/2021/06/%E3%81%A4%E3%81%B0%E3%82%81%E3%81%95%E3%82%93.jpg\" :\r\n        index === 3 ? avater.image=\"https://iconbu.com/wp-content/uploads/2021/06/%E3%81%A6%E3%82%8B%E3%81%A6%E3%82%8B%E3%81%BC%E3%81%86%E3%81%9A%E3%81%95%E3%82%93%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3.jpg\" :\r\n        index === 4 ? avater.image=\"https://iconbu.com/wp-content/uploads/2020/09/%E3%81%9F%E3%81%AC%E3%81%8D%E3%81%95%E3%82%93.jpg\" :\r\n        avater.image=\"https://iconbu.com/wp-content/uploads/2021/03/%E3%81%9F%E3%81%AC%E3%81%8D%E3%81%95%E3%82%93%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3.jpg\";\r\n        return <div>\r\n          <Avatereffect key={avater.peerId} avater={avater}/>\r\n          </div>;\r\n      });\r\n    };\r\n    \r\n    const castAvaterimage = () => {\r\n      return Avater.map((avater, index) => {\r\n        index === 1 ? avater.image=\"https://iconbu.com/wp-content/uploads/2020/08/%E3%83%95%E3%83%88%E3%82%A2%E3%82%B4%E3%81%95%E3%82%93.jpg\" :\r\n        index === 2 ? avater.image=\"https://iconbu.com/wp-content/uploads/2021/06/%E3%81%A4%E3%81%B0%E3%82%81%E3%81%95%E3%82%93.jpg\" :\r\n        index === 3 ? avater.image=\"https://iconbu.com/wp-content/uploads/2021/06/%E3%81%A6%E3%82%8B%E3%81%A6%E3%82%8B%E3%81%BC%E3%81%86%E3%81%9A%E3%81%95%E3%82%93%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3.jpg\" :\r\n        index === 4 ? avater.image=\"https://iconbu.com/wp-content/uploads/2020/09/%E3%81%9F%E3%81%AC%E3%81%8D%E3%81%95%E3%82%93.jpg\" :\r\n        avater.image=\"https://iconbu.com/wp-content/uploads/2021/03/%E3%81%9F%E3%81%AC%E3%81%8D%E3%81%95%E3%82%93%E3%81%AE%E3%82%A2%E3%82%A4%E3%82%B3%E3%83%B3.jpg\";\r\n        return <div>\r\n          <Avaterimage key={avater.peerId} avater={avater}/>\r\n          </div>;\r\n      });\r\n    }\r\n\r\n    const check = () =>{\r\n      console.log(remoteVideo);\r\n    };\r\n    const toggleOpen = () => {\r\n      setopen(!open);\r\n    };\r\n    const toggleOpen2 = () => {\r\n      setopen2(!open2);\r\n    };\r\n    const changetext = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n      setMessage(e.target.value);\r\n    };\r\n    const sendmessage = () =>{\r\n      console.log(\"send\");\r\n      setMessage(\"\");\r\n      room?.send(Message);\r\n      const text = `${peer.current.id}:${Message}\\n`;\r\n      const add_text = document.getElementById('t_chat') as HTMLInputElement;\r\n      add_text.value += text;\r\n    };\r\n    const reaction = (index: string) =>{\r\n      index === \"a\" ? room?.send(\"(*^^)v\") :\r\n      index === \"b\" ? room?.send(\"!(^^)!\") :\r\n      index === \"c\" ? room?.send(\"( ;∀;)\") : room?.send(\"a\");\r\n    };\r\n \r\n    return (\r\n      <div>\r\n        <button onClick={toggleOpen}>Webcam</button>\r\n        <button onClick={toggleOpen2}>Text</button>\r\n        <div>\r\n          {castAvaterimage()}\r\n          <video id=\"js-remote-screen-streams\" ref={ScreenShareRef} playsInline></video>\r\n        </div>\r\n        <Drawer variant=\"persistent\" ModalProps={{keepMounted: true,}} anchor=\"right\" open={open2} onClose={toggleOpen2}>\r\n          <Timer expiryTimestamp={Date as unknown as Date} />\r\n          <Button variant=\"contained\" className={classes.button} onClick={() => onStart()} disabled={isStarted}>\r\n            start\r\n          </Button>\r\n          <Button variant=\"contained\" className={classes.button} onClick={() => onEnd()} disabled={!isStarted}>\r\n            end\r\n          </Button>\r\n          <Button variant=\"contained\" className={classes.button} onClick={() => check()}>\r\n            check\r\n          </Button>\r\n          <Button variant=\"contained\" className={classes.button} id=\"js-startScreenShare-trigger\">画面共有開始</Button>\r\n          {castAvater()}\r\n          <textarea className={classes.textarea} readOnly id=\"t_chat\"></textarea>\r\n          <TextField value={Message} name={\"text\"} onChange={(e) => changetext(e)} onKeyDown={e => {if(e.key === 'Enter'){sendmessage()}}}/>\r\n          <Box className={classes.Box}>\r\n            <Button variant=\"contained\" className={classes.reaction} onClick={() => reaction(\"a\")}>\r\n              a\r\n            </Button>\r\n            <Button variant=\"contained\" className={classes.reaction} onClick={() => reaction(\"b\")}>\r\n              b\r\n            </Button>\r\n            <Button variant=\"contained\" className={classes.reaction} onClick={() => reaction(\"c\")}>\r\n              c\r\n            </Button>\r\n          </Box>\r\n        </Drawer>\r\n        <Drawer variant=\"persistent\" ModalProps={{keepMounted: true,}} anchor=\"right\" open={open} onClose={toggleOpen}>\r\n          <video ref={localVideoRef} playsInline></video>\r\n          {castVideo()}\r\n        </Drawer>\r\n      </div>\r\n    );\r\n  };\r\n  \r\n  const RemoteVideo = (props: { video: VideoStream }) => {\r\n    const videoRef = React.useRef<HTMLVideoElement>(null);\r\n  \r\n    React.useEffect(() => {\r\n      if (videoRef.current) {\r\n        videoRef.current.srcObject = props.video.stream;\r\n        videoRef.current.play().catch((e) => console.log(e));\r\n      }\r\n    }, [props.video]);\r\n    return <video ref={videoRef} playsInline></video>;\r\n  };\r\n  const Avatereffect = (props: { avater: Avater }) => {\r\n    const classes = useStyles();\r\n    return <div>\r\n      <img className={classes.icons} src={props.avater.image} alt={props.avater.peerId}></img>\r\n      <span>{props.avater.peerId}</span>\r\n    </div>;\r\n  };\r\n  const Avaterimage = (props: { avater: Avater }) => {\r\n    const classes = useStyles();\r\n    return <div>\r\n      <img id={props.avater.peerId} className={classes.imageicons} src={props.avater.image} alt={props.avater.peerId}></img>\r\n    </div>;\r\n  };\r\n\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Room } from \"./room\";\nconst App: React.VFC = () => {\n  return (\n    <>\n      <Room roomId={\"1\"} />\n    </>\n  );\n};\nexport default App;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}